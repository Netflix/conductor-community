plugins {
    id "com.gradle.enterprise" version "3.10.3"
}

gradleEnterprise {
    buildScan {
        termsOfServiceUrl = "https://gradle.com/terms-of-service"
        termsOfServiceAgree = "yes"
        publishAlways()

        buildScanPublished { scan ->
            file("buildscan.log") << "${new Date()} - ${scan.buildScanUri}\n"
        }
    }
}

rootProject.name = 'conductor-community'

include 'external-payload-storage'
include 'task'
include 'event-queue'
include 'metrics'
include 'persistence'
include 'index'
include 'test-util'
include 'lock'
include 'workflow-event-listener'

include 'persistence:common-persistence'
include 'persistence:mysql-persistence'
include 'persistence:postgres-persistence'
include 'index:es7-persistence'
include 'external-payload-storage:azureblob-storage'
include 'external-payload-storage:postgres-external-storage'
include 'event-queue:amqp'
include 'event-queue:nats'
include 'lock:zookeeper-lock'
include 'task:kafka'
include 'community-server'

rootProject.children.stream()
        .filter(p -> p.name.equals("persistence") || p.name.equals("index") ||
                p.name.equals("external-payload-storage") || p.name.equals("event-queue") ||
                p.name.equals("lock") || p.name.equals("task"))
        .forEach(it -> it.children
                .forEach(c -> c.name = "conductor-" + c.name))

rootProject.children.stream()
        .filter(p -> !p.name.equals("persistence") && !p.name.equals("index") &&
                !p.name.equals("external-payload-storage") && !p.name.equals("event-queue") &&
                !p.name.equals("lock") && !p.name.equals("task"))
        .forEach(it -> it.name = "conductor-" + it.name)

